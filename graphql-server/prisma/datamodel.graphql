type User {
  id: ID! @id
  name: String!
  email: String! @unique
  picture: String
  password: String!
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  messages: [Message!]! @relation(name: "MessageToUser", onDelete: CASCADE)
  adminOnChannels: [Channel!]! @relation(name: "ChannelToUser", onDelete: SET_NULL)
  userOnChannels: [Channel!]! @relation(name: "UserToChannel", onDelete: SET_NULL)
  likes: [Message!]! @relation(name: "MessageLikesToUser", onDelete: SET_NULL)
}

type Message {
  id: ID! @id
  content: String!
  picture: String
  author: User! @relation(name: "MessageToUser", onDelete: SET_NULL)
  channel: Channel! @relation(name: "ChannelToMessage", onDelete: SET_NULL)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
  likes: [User!]! @relation(name: "MessageLikesToUser", onDelete: SET_NULL)
}

type Channel {
  id: ID! @id
  name: String! @unique
  picture: String
  description: String
  admins: [User!]! @relation(name: "ChannelToUser", onDelete: SET_NULL)
  users: [User!]! @relation(name: "UserToChannel", onDelete: SET_NULL)
  messages: [Message!]! @relation(name: "ChannelToMessage", onDelete: CASCADE)
  updatedAt: DateTime! @updatedAt
  createdAt: DateTime! @createdAt
}
